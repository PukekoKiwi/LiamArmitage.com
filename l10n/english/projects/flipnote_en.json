{
    "head": {
      "title": "Liam Armitage - Technical Artist"
    },
    "header": {
      "title": "Liam Armitage",
      "subTitle": "Technical Artist",
      "resume": "&nbsp; Resume",
      "back": "To Portfolio",
      "about": "About Me",
      "translate": "Ａ → あ"
    },
    "main": {
      "introduction": {
        "title": "Developing a Flipnote-Inspired Shader",
        "description": "For this project, I tried to capture the visual style of Flipnote Studio on the Nintendo DSi and 3DS, translating that unique aesthetic into a real-time 3D environment. The challenge was tackled through HLSL shader programming within Unity.",
        "link": "If you'd like to see the details of my process, feel free to look at my journal for it <a href='https://snowy-engine-238.notion.site/100-Days-of-Tech-Art-94e362b1607e45029b795429b6d6c4f6'>here</a>!"
      },
      "approach": {
        "title": "Approach to Design",
        "description": "The shader design process was a great look through the following techniques:",
        "method1": "<b>Screenspace Dithering</b>: Using Python, I generated a volumetric mapping texture that finds the nearest visually equivalent shade from the 3DS color palette and points to the top left corner of an 8x8 square of that 'dither palette'. Then, in the shader, the pixel coordinates are used to determine its position in the 8x8 cell, leading to a screenspace dithering effect.",
        "method2": "<b>Depth-Normals</b>: This approach involved a combination of two maps: a normal map of the scene and a depth map. They were multiplied together to create a reliable way of outlining close objects to the camera.",
        "method3": "<b>Edge Detection</b>: For this, I applied Sobel edge detection, which involves convolving a kernel on the x and y coordinates of an image. In this case, it was applied to the depth normals.",
        "method4": "<b>Noise-Accented Outline</b>: Applying a pseudo-random number generator to add a 'sketchy' feel to outlines, reminiscent of the Flipnote's casual, low-res feel.",
        "description2": "Despite challenges with interfacing with Unity's built-in functions and parsing through dense documentation, with assistance from peers and substantial research, I managed to pull through and learn a ton about programming shaders at the base level!"
      },
      "visualization": {
        "title": "Visualizations & Previews",
        "caption1": "Dithered representions of different color distance models using the 3DS Color Palette.",
        "caption2": "A visualization of the volumetric mapping texture for the 3DS color palette.",
        "caption3": "Edge dispersion created through noise, adding to the fun sketchyquality of the shader!"
      },
      "conclusion": {
        "title1": "Optimization and Future Plans",
        "description1": "I identified potential improvements to the system that could significantly enhance performance. For instance, merging the dither palette with the volumetric texture that is sampled for each fragment would reduce the number of sample calls—a significant area for performance gain. I also plan to explore less computationally expensive math calculations for the noise function.",
        "title2": "Application and Integration",
        "description2": "The shader, packaged as a user-friendly Unity package file, can be easily implemented as a post-processing effect on any camera. You can download it here!",
        "title3": "Inspiration and Learning",
        "description3": "This project was an invaluable learning journey. Various super cool online peeps, such as <a href='https://www.youtube.com/@Acerola_t' class='inspirations' target='_blank'>Acerola</a>, <a href='https://www.youtube.com/@Acegikmo' class='inspirations' target='_blank'>Freya Holmér</a>, and <a href='https://www.ronja-tutorials.com/' class='inspirations' target='_blank'>Ronja</a>, were amazing introductions into this sort of thing. I found this project to be a wonderful fusion of technical exploration and nostalgic aesthetic. It's been a thrilling process and I'm looking forward to pushing the boundaries of what's possible with shader programming in the future!"
      }
    }
  }
  